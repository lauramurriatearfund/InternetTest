<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationName" xml:space="preserve">
    <value>Internet Testing</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="ChooseYourLanguage" xml:space="preserve">
    <value>Choose your language</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CountryRequired" xml:space="preserve">
    <value>Please enter your country, or simply pick any one from the list</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Dialup" xml:space="preserve">
    <value>Dialup</value>
  </data>
  <data name="DisplayMenuLabel" xml:space="preserve">
    <value>Display</value>
  </data>
  <data name="EnterDesc" xml:space="preserve">
    <value>Welcome to the internet test application, partner entry page. Please enter a few details.
Remember that this is just a test so the exact information you type is not important i.e. feel free to make it up!</value>
  </data>
  <data name="EnterMenuLabel" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="EnterTitle" xml:space="preserve">
    <value>Entry of Partner Details</value>
  </data>
  <data name="FourG" xml:space="preserve">
    <value>4G</value>
  </data>
  <data name="GPRS" xml:space="preserve">
    <value>GPRS</value>
  </data>
  <data name="HighSpeedBroadband" xml:space="preserve">
    <value>High Speed Broadband</value>
  </data>
  <data name="HomeMenuLabel" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="InfoReceived" xml:space="preserve">
    <value>Thank you. Your information has been received</value>
  </data>
  <data name="LowSpeedBroadband" xml:space="preserve">
    <value>Low Speed Broadband</value>
  </data>
  <data name="PartnerName" xml:space="preserve">
    <value>Partner Name</value>
  </data>
  <data name="PartnerNameLength" xml:space="preserve">
    <value>Partner Name must be between 6 and 40 characters long</value>
  </data>
  <data name="PartnerNameRequired" xml:space="preserve">
    <value>Please enter a name for your organisation</value>
  </data>
  <data name="PartnerRef" xml:space="preserve">
    <value>Partner Reference</value>
  </data>
  <data name="PartnerRefLength" xml:space="preserve">
    <value>Partner Reference must be between 6 and 40 characters long</value>
  </data>
  <data name="PartnerRefRequired" xml:space="preserve">
    <value>Please enter a reference number for your organisation, or make one up</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>Project Name</value>
  </data>
  <data name="ProjectNameLength" xml:space="preserve">
    <value>Project Name must be between 6 and 100 characters long</value>
  </data>
  <data name="ProjectNameRequired" xml:space="preserve">
    <value>Please enter a name for your project, or make one up</value>
  </data>
  <data name="SatellitePhone" xml:space="preserve">
    <value>Satellite Phone</value>
  </data>
  <data name="SMS" xml:space="preserve">
    <value>SMS</value>
  </data>
  <data name="SubmitDesc" xml:space="preserve">
    <value>Please complete the form below as best you can. The exact information is not important</value>
  </data>
  <data name="SubmitMenuLabel" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="SubmitTitle" xml:space="preserve">
    <value>Submission of Project Details</value>
  </data>
  <data name="TellUs" xml:space="preserve">
    <value>Tell Us</value>
  </data>
  <data name="TextMenuLabel" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="ThreeG" xml:space="preserve">
    <value>3G</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="UploadDesc" xml:space="preserve">
    <value>Please complete this form and upload at least one document. This is a test so the file contents is not important, and the information will not be saved</value>
  </data>
  <data name="UploadMenuLabel" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="UploadTitle" xml:space="preserve">
    <value>Upload of Supporting Documents</value>
  </data>
  <data name="ValidateDesc" xml:space="preserve">
    <value>Please approve the dialogue box so we can obtain your location. </value>
  </data>
  <data name="ValidateMenuLabel" xml:space="preserve">
    <value>Locate</value>
  </data>
  <data name="ValidateTitle" xml:space="preserve">
    <value>Internet Connectivity and Location</value>
  </data>
</root>